09/29 23:31:41 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.23 (main, Jun  5 2025, 13:40:20) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 268722126
    GPU 0: NVIDIA GeForce RTX 3080 Ti
    CUDA_HOME: /opt/cuda-12.1/
    NVCC: Cuda compilation tools, release 12.1, V12.1.66
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.1.2
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 268722126
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/29 23:31:41 - mmengine - INFO - Config:
crop_size = (
    512,
    1024,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        1024,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = '/scratch/segmentation_benchmark/food_FINAL_resized/'
dataset_type = 'YourDataset_BIG'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False,
        interval=40000,
        save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
img_suffix = '.jpg'
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=49,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            1024,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        concat_input=True,
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=49,
        num_convs=2,
        type='FCNHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=320000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
randomness = dict(seed=268722126)
resume = False
seg_map_suffix = '.png'
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(img_path='test/images', seg_map_path='test/masks'),
        data_root='/scratch/segmentation_benchmark/food_FINAL_resized/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='YourDataset_BIG'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    classwise=True, iou_metrics=[
        'mIoU',
    ], type='IoUNanAbsent')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        1024,
    ), type='Resize'),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=320000, type='IterBasedTrainLoop', val_interval=40000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(img_path='train/images', seg_map_path='train/masks'),
        data_root='/scratch/segmentation_benchmark/food_FINAL_resized/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    1024,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    1024,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='YourDataset_BIG'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            1024,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        1024,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(img_path='test/images', seg_map_path='test/masks'),
        data_root='/scratch/segmentation_benchmark/food_FINAL_resized/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='YourDataset_BIG'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '/scratch/segmentation_benmark/mmseg_work_dir/AR_FCN_R50-resized_320K'

/home2/yasharora120/segmentation_benchmark/mmsegmentation/mmseg/models/backbones/resnet.py:431: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, '
/home2/yasharora120/segmentation_benchmark/mmsegmentation/mmseg/models/losses/cross_entropy_loss.py:250: UserWarning: Default ``avg_non_ignore`` is False, if you would like to ignore the certain label and average loss over non-ignore labels, which is the same with PyTorch official cross_entropy, set ``avg_non_ignore=True``.
  warnings.warn(
09/29 23:31:45 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home2/yasharora120/segmentation_benchmark/mmsegmentation/mmseg/engine/hooks/visualization_hook.py:60: UserWarning: The draw is False, it means that the hook for visualization will not take effect. The results will NOT be visualized or stored.
  warnings.warn('The draw is False, it means that the '
09/29 23:31:45 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/29 23:31:46 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
09/29 23:31:46 - mmengine - INFO - load model from: open-mmlab://resnet50_v1c
09/29 23:31:46 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://resnet50_v1c
09/29 23:31:46 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

09/29 23:31:46 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/29 23:31:46 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/29 23:31:46 - mmengine - INFO - Checkpoints will be saved to /scratch/segmentation_benmark/mmseg_work_dir/AR_FCN_R50-resized_320K.
09/29 23:32:02 - mmengine - INFO - Iter(train) [    50/320000]  lr: 9.9986e-03  eta: 1 day, 3:52:40  time: 0.2354  data_time: 0.0048  memory: 8304  loss: 2.0026  decode.loss_ce: 1.3830  decode.acc_seg: 69.7154  aux.loss_ce: 0.6196  aux.acc_seg: 70.5725
09/29 23:32:14 - mmengine - INFO - Iter(train) [   100/320000]  lr: 9.9972e-03  eta: 1 day, 0:25:19  time: 0.2361  data_time: 0.0048  memory: 5530  loss: 2.1829  decode.loss_ce: 1.5391  decode.acc_seg: 59.6211  aux.loss_ce: 0.6438  aux.acc_seg: 59.7560
09/29 23:32:26 - mmengine - INFO - Iter(train) [   150/320000]  lr: 9.9959e-03  eta: 23:17:09  time: 0.2370  data_time: 0.0048  memory: 5530  loss: 2.2185  decode.loss_ce: 1.5605  decode.acc_seg: 66.8121  aux.loss_ce: 0.6580  aux.acc_seg: 60.5221
09/29 23:32:37 - mmengine - INFO - Iter(train) [   200/320000]  lr: 9.9945e-03  eta: 22:43:38  time: 0.2375  data_time: 0.0049  memory: 5530  loss: 2.0797  decode.loss_ce: 1.4762  decode.acc_seg: 62.1675  aux.loss_ce: 0.6035  aux.acc_seg: 68.5034
09/29 23:32:49 - mmengine - INFO - Iter(train) [   250/320000]  lr: 9.9931e-03  eta: 22:23:37  time: 0.2372  data_time: 0.0048  memory: 5530  loss: 1.7542  decode.loss_ce: 1.2276  decode.acc_seg: 64.5668  aux.loss_ce: 0.5266  aux.acc_seg: 67.2101
09/29 23:33:01 - mmengine - INFO - Iter(train) [   300/320000]  lr: 9.9917e-03  eta: 22:11:05  time: 0.2388  data_time: 0.0049  memory: 5530  loss: 1.5230  decode.loss_ce: 1.0689  decode.acc_seg: 61.7710  aux.loss_ce: 0.4541  aux.acc_seg: 53.4263
09/29 23:33:13 - mmengine - INFO - Iter(train) [   350/320000]  lr: 9.9903e-03  eta: 22:02:19  time: 0.2386  data_time: 0.0047  memory: 5530  loss: 1.8460  decode.loss_ce: 1.3045  decode.acc_seg: 46.2376  aux.loss_ce: 0.5415  aux.acc_seg: 48.2094
09/29 23:33:25 - mmengine - INFO - Iter(train) [   400/320000]  lr: 9.9889e-03  eta: 21:55:37  time: 0.2385  data_time: 0.0048  memory: 5530  loss: 1.9181  decode.loss_ce: 1.3400  decode.acc_seg: 49.6086  aux.loss_ce: 0.5781  aux.acc_seg: 48.8753
09/29 23:33:34 - mmengine - INFO - Exp name: fcn_r50-d8_4xb2-80k_MYDATA-512x1024_20250929_233140
09/29 23:33:37 - mmengine - INFO - Iter(train) [   450/320000]  lr: 9.9875e-03  eta: 21:50:18  time: 0.2382  data_time: 0.0048  memory: 5530  loss: 1.6249  decode.loss_ce: 1.1322  decode.acc_seg: 74.9292  aux.loss_ce: 0.4928  aux.acc_seg: 68.7801
09/29 23:33:49 - mmengine - INFO - Iter(train) [   500/320000]  lr: 9.9861e-03  eta: 21:46:09  time: 0.2379  data_time: 0.0046  memory: 5530  loss: 1.0813  decode.loss_ce: 0.7615  decode.acc_seg: 56.6837  aux.loss_ce: 0.3198  aux.acc_seg: 56.5359
09/29 23:34:01 - mmengine - INFO - Iter(train) [   550/320000]  lr: 9.9847e-03  eta: 21:42:51  time: 0.2387  data_time: 0.0048  memory: 5530  loss: 1.4410  decode.loss_ce: 0.9976  decode.acc_seg: 41.7830  aux.loss_ce: 0.4434  aux.acc_seg: 40.2538
09/29 23:34:13 - mmengine - INFO - Iter(train) [   600/320000]  lr: 9.9833e-03  eta: 21:39:58  time: 0.2391  data_time: 0.0049  memory: 5530  loss: 1.9020  decode.loss_ce: 1.3354  decode.acc_seg: 72.1805  aux.loss_ce: 0.5666  aux.acc_seg: 80.9992
09/29 23:34:25 - mmengine - INFO - Iter(train) [   650/320000]  lr: 9.9819e-03  eta: 21:37:34  time: 0.2389  data_time: 0.0048  memory: 5530  loss: 1.1408  decode.loss_ce: 0.7916  decode.acc_seg: 79.7797  aux.loss_ce: 0.3492  aux.acc_seg: 82.0157
09/29 23:34:37 - mmengine - INFO - Iter(train) [   700/320000]  lr: 9.9805e-03  eta: 21:35:26  time: 0.2388  data_time: 0.0048  memory: 5530  loss: 1.3467  decode.loss_ce: 0.9441  decode.acc_seg: 75.5005  aux.loss_ce: 0.4026  aux.acc_seg: 73.3848
09/29 23:34:49 - mmengine - INFO - Iter(train) [   750/320000]  lr: 9.9791e-03  eta: 21:33:43  time: 0.2392  data_time: 0.0050  memory: 5530  loss: 1.3724  decode.loss_ce: 0.9523  decode.acc_seg: 72.4414  aux.loss_ce: 0.4200  aux.acc_seg: 70.9996
09/29 23:35:01 - mmengine - INFO - Iter(train) [   800/320000]  lr: 9.9777e-03  eta: 21:32:21  time: 0.2402  data_time: 0.0054  memory: 5530  loss: 1.3718  decode.loss_ce: 0.9583  decode.acc_seg: 81.9789  aux.loss_ce: 0.4135  aux.acc_seg: 81.1089
09/29 23:35:13 - mmengine - INFO - Iter(train) [   850/320000]  lr: 9.9764e-03  eta: 21:31:08  time: 0.2397  data_time: 0.0052  memory: 5530  loss: 1.1517  decode.loss_ce: 0.8017  decode.acc_seg: 70.9984  aux.loss_ce: 0.3500  aux.acc_seg: 66.8752
09/29 23:35:25 - mmengine - INFO - Iter(train) [   900/320000]  lr: 9.9750e-03  eta: 21:30:10  time: 0.2406  data_time: 0.0055  memory: 5530  loss: 1.4356  decode.loss_ce: 1.0041  decode.acc_seg: 72.7951  aux.loss_ce: 0.4315  aux.acc_seg: 74.2458
09/29 23:35:37 - mmengine - INFO - Iter(train) [   950/320000]  lr: 9.9736e-03  eta: 21:29:04  time: 0.2395  data_time: 0.0049  memory: 5530  loss: 1.4660  decode.loss_ce: 1.0391  decode.acc_seg: 74.3047  aux.loss_ce: 0.4269  aux.acc_seg: 81.9184
09/29 23:35:49 - mmengine - INFO - Exp name: fcn_r50-d8_4xb2-80k_MYDATA-512x1024_20250929_233140
09/29 23:35:49 - mmengine - INFO - Iter(train) [  1000/320000]  lr: 9.9722e-03  eta: 21:28:00  time: 0.2391  data_time: 0.0050  memory: 5530  loss: 1.4229  decode.loss_ce: 1.0091  decode.acc_seg: 84.7613  aux.loss_ce: 0.4138  aux.acc_seg: 84.7509
09/29 23:36:01 - mmengine - INFO - Iter(train) [  1050/320000]  lr: 9.9708e-03  eta: 21:27:02  time: 0.2390  data_time: 0.0049  memory: 5530  loss: 0.8243  decode.loss_ce: 0.5592  decode.acc_seg: 85.8039  aux.loss_ce: 0.2651  aux.acc_seg: 84.0132
09/29 23:36:12 - mmengine - INFO - Iter(train) [  1100/320000]  lr: 9.9694e-03  eta: 21:26:05  time: 0.2389  data_time: 0.0048  memory: 5530  loss: 1.0792  decode.loss_ce: 0.7656  decode.acc_seg: 85.2200  aux.loss_ce: 0.3136  aux.acc_seg: 75.5666
09/29 23:36:24 - mmengine - INFO - Iter(train) [  1150/320000]  lr: 9.9680e-03  eta: 21:25:13  time: 0.2391  data_time: 0.0049  memory: 5530  loss: 1.1214  decode.loss_ce: 0.7817  decode.acc_seg: 72.4354  aux.loss_ce: 0.3398  aux.acc_seg: 59.4683
09/29 23:36:36 - mmengine - INFO - Iter(train) [  1200/320000]  lr: 9.9666e-03  eta: 21:24:26  time: 0.2392  data_time: 0.0050  memory: 5530  loss: 1.1944  decode.loss_ce: 0.8215  decode.acc_seg: 79.2556  aux.loss_ce: 0.3729  aux.acc_seg: 80.0431
09/29 23:36:48 - mmengine - INFO - Iter(train) [  1250/320000]  lr: 9.9652e-03  eta: 21:23:41  time: 0.2389  data_time: 0.0048  memory: 5530  loss: 1.0109  decode.loss_ce: 0.6915  decode.acc_seg: 81.8770  aux.loss_ce: 0.3194  aux.acc_seg: 86.8280
09/29 23:37:00 - mmengine - INFO - Iter(train) [  1300/320000]  lr: 9.9638e-03  eta: 21:22:59  time: 0.2393  data_time: 0.0049  memory: 5530  loss: 1.1577  decode.loss_ce: 0.8067  decode.acc_seg: 88.2077  aux.loss_ce: 0.3510  aux.acc_seg: 81.7048
09/29 23:37:12 - mmengine - INFO - Iter(train) [  1350/320000]  lr: 9.9624e-03  eta: 21:22:21  time: 0.2392  data_time: 0.0049  memory: 5530  loss: 1.2033  decode.loss_ce: 0.8413  decode.acc_seg: 65.9253  aux.loss_ce: 0.3621  aux.acc_seg: 65.6398
09/29 23:37:24 - mmengine - INFO - Iter(train) [  1400/320000]  lr: 9.9610e-03  eta: 21:21:45  time: 0.2393  data_time: 0.0049  memory: 5530  loss: 1.4730  decode.loss_ce: 1.0279  decode.acc_seg: 87.4023  aux.loss_ce: 0.4451  aux.acc_seg: 81.0976
09/29 23:37:36 - mmengine - INFO - Iter(train) [  1450/320000]  lr: 9.9596e-03  eta: 21:21:08  time: 0.2392  data_time: 0.0048  memory: 5530  loss: 1.0171  decode.loss_ce: 0.7017  decode.acc_seg: 80.6221  aux.loss_ce: 0.3154  aux.acc_seg: 78.8807
09/29 23:37:48 - mmengine - INFO - Iter(train) [  1500/320000]  lr: 9.9583e-03  eta: 21:20:32  time: 0.2391  data_time: 0.0047  memory: 5530  loss: 1.1372  decode.loss_ce: 0.7876  decode.acc_seg: 66.8374  aux.loss_ce: 0.3496  aux.acc_seg: 67.1537
09/29 23:38:00 - mmengine - INFO - Iter(train) [  1550/320000]  lr: 9.9569e-03  eta: 21:20:03  time: 0.2396  data_time: 0.0049  memory: 5530  loss: 1.1552  decode.loss_ce: 0.7990  decode.acc_seg: 60.5495  aux.loss_ce: 0.3563  aux.acc_seg: 54.3077
09/29 23:38:12 - mmengine - INFO - Iter(train) [  1600/320000]  lr: 9.9555e-03  eta: 21:19:34  time: 0.2396  data_time: 0.0051  memory: 5530  loss: 1.1224  decode.loss_ce: 0.7703  decode.acc_seg: 80.0216  aux.loss_ce: 0.3521  aux.acc_seg: 71.2620
09/29 23:38:24 - mmengine - INFO - Iter(train) [  1650/320000]  lr: 9.9541e-03  eta: 21:19:05  time: 0.2391  data_time: 0.0050  memory: 5530  loss: 0.9518  decode.loss_ce: 0.6538  decode.acc_seg: 96.2793  aux.loss_ce: 0.2980  aux.acc_seg: 94.6765
09/29 23:38:36 - mmengine - INFO - Iter(train) [  1700/320000]  lr: 9.9527e-03  eta: 21:18:37  time: 0.2396  data_time: 0.0051  memory: 5530  loss: 1.1809  decode.loss_ce: 0.8119  decode.acc_seg: 52.9282  aux.loss_ce: 0.3691  aux.acc_seg: 53.2599
09/29 23:38:48 - mmengine - INFO - Iter(train) [  1750/320000]  lr: 9.9513e-03  eta: 21:18:12  time: 0.2393  data_time: 0.0050  memory: 5530  loss: 0.9429  decode.loss_ce: 0.6430  decode.acc_seg: 85.0301  aux.loss_ce: 0.2999  aux.acc_seg: 81.4963
09/29 23:39:00 - mmengine - INFO - Iter(train) [  1800/320000]  lr: 9.9499e-03  eta: 21:17:46  time: 0.2394  data_time: 0.0049  memory: 5530  loss: 1.2522  decode.loss_ce: 0.8802  decode.acc_seg: 83.0138  aux.loss_ce: 0.3720  aux.acc_seg: 78.1648
09/29 23:39:12 - mmengine - INFO - Iter(train) [  1850/320000]  lr: 9.9485e-03  eta: 21:17:21  time: 0.2394  data_time: 0.0049  memory: 5530  loss: 0.9595  decode.loss_ce: 0.6527  decode.acc_seg: 84.9483  aux.loss_ce: 0.3069  aux.acc_seg: 84.6803
09/29 23:39:24 - mmengine - INFO - Iter(train) [  1900/320000]  lr: 9.9471e-03  eta: 21:16:56  time: 0.2396  data_time: 0.0051  memory: 5530  loss: 1.0800  decode.loss_ce: 0.7334  decode.acc_seg: 90.4558  aux.loss_ce: 0.3466  aux.acc_seg: 86.3023
09/29 23:39:36 - mmengine - INFO - Iter(train) [  1950/320000]  lr: 9.9457e-03  eta: 21:16:33  time: 0.2394  data_time: 0.0049  memory: 5530  loss: 0.7739  decode.loss_ce: 0.5224  decode.acc_seg: 89.2988  aux.loss_ce: 0.2515  aux.acc_seg: 89.0273
09/29 23:39:48 - mmengine - INFO - Exp name: fcn_r50-d8_4xb2-80k_MYDATA-512x1024_20250929_233140
09/29 23:39:48 - mmengine - INFO - Iter(train) [  2000/320000]  lr: 9.9443e-03  eta: 21:16:12  time: 0.2400  data_time: 0.0052  memory: 5530  loss: 1.0077  decode.loss_ce: 0.7038  decode.acc_seg: 73.0903  aux.loss_ce: 0.3039  aux.acc_seg: 71.2871
09/29 23:40:00 - mmengine - INFO - Iter(train) [  2050/320000]  lr: 9.9429e-03  eta: 21:15:50  time: 0.2395  data_time: 0.0051  memory: 5530  loss: 0.7453  decode.loss_ce: 0.4962  decode.acc_seg: 72.0341  aux.loss_ce: 0.2491  aux.acc_seg: 77.9349
09/29 23:40:12 - mmengine - INFO - Iter(train) [  2100/320000]  lr: 9.9415e-03  eta: 21:15:30  time: 0.2396  data_time: 0.0050  memory: 5530  loss: 1.5942  decode.loss_ce: 1.1023  decode.acc_seg: 47.4493  aux.loss_ce: 0.4919  aux.acc_seg: 47.9024
09/29 23:40:24 - mmengine - INFO - Iter(train) [  2150/320000]  lr: 9.9401e-03  eta: 21:15:11  time: 0.2398  data_time: 0.0053  memory: 5530  loss: 1.1820  decode.loss_ce: 0.8300  decode.acc_seg: 90.4247  aux.loss_ce: 0.3519  aux.acc_seg: 94.8582
09/29 23:40:36 - mmengine - INFO - Iter(train) [  2200/320000]  lr: 9.9388e-03  eta: 21:14:55  time: 0.2401  data_time: 0.0054  memory: 5530  loss: 0.8523  decode.loss_ce: 0.5710  decode.acc_seg: 97.7915  aux.loss_ce: 0.2813  aux.acc_seg: 97.7115
09/29 23:40:48 - mmengine - INFO - Iter(train) [  2250/320000]  lr: 9.9374e-03  eta: 21:14:39  time: 0.2402  data_time: 0.0053  memory: 5530  loss: 1.1653  decode.loss_ce: 0.8025  decode.acc_seg: 78.9539  aux.loss_ce: 0.3629  aux.acc_seg: 76.8366
09/29 23:41:00 - mmengine - INFO - Iter(train) [  2300/320000]  lr: 9.9360e-03  eta: 21:14:17  time: 0.2399  data_time: 0.0052  memory: 5530  loss: 0.8005  decode.loss_ce: 0.5276  decode.acc_seg: 75.9572  aux.loss_ce: 0.2729  aux.acc_seg: 69.1127
09/29 23:41:12 - mmengine - INFO - Iter(train) [  2350/320000]  lr: 9.9346e-03  eta: 21:13:57  time: 0.2397  data_time: 0.0051  memory: 5530  loss: 1.1260  decode.loss_ce: 0.7784  decode.acc_seg: 81.9450  aux.loss_ce: 0.3476  aux.acc_seg: 80.4723
09/29 23:41:24 - mmengine - INFO - Iter(train) [  2400/320000]  lr: 9.9332e-03  eta: 21:13:38  time: 0.2392  data_time: 0.0047  memory: 5530  loss: 1.1779  decode.loss_ce: 0.7870  decode.acc_seg: 80.7200  aux.loss_ce: 0.3909  aux.acc_seg: 74.9348
09/29 23:41:36 - mmengine - INFO - Iter(train) [  2450/320000]  lr: 9.9318e-03  eta: 21:13:17  time: 0.2394  data_time: 0.0048  memory: 5530  loss: 1.2002  decode.loss_ce: 0.8307  decode.acc_seg: 64.1285  aux.loss_ce: 0.3695  aux.acc_seg: 66.5746
09/29 23:41:48 - mmengine - INFO - Iter(train) [  2500/320000]  lr: 9.9304e-03  eta: 21:12:57  time: 0.2398  data_time: 0.0049  memory: 5530  loss: 1.3062  decode.loss_ce: 0.8839  decode.acc_seg: 67.3532  aux.loss_ce: 0.4223  aux.acc_seg: 60.6967
